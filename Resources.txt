Senamtic HTML (this is a great article):
  https://internetingishard.netlify.app/html-and-css/semantic-html/index.html

CSS Flexbox (check out the next 3 lessons also):
  https://www.w3schools.com/css/css3_flexbox.asp

Mozilla Flexbox Basics:
  https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox

More Flexbox:
  https://internetingishard.netlify.app/html-and-css/flexbox/index.html

Flexbox Best Practices:
  https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Typical_Use_Cases_of_Flexbox

More on Semantics:
  https://developer.mozilla.org/en-US/docs/Glossary/Semantics


RESEARCH

Flexbox
  CSS Flexible Box Layout, commonly known as Flexbox, is a CSS 3 web layout model. It is in the W3C's candidate recommendation stage. The flex layout allows responsive elements within a container to be automatically arranged depending upon screen size.

  The Flexible Box Module, usually referred to as flexbox, was designed as a one-dimensional layout model, and as a method that could offer space distribution between items in an interface and powerful alignment capabilities. When we describe flexbox as being one dimensional we are describing the fact that flexbox deals with layout in one dimension at a time â€” either as a row or as a column. This can be contrasted with the two-dimensional model of CSS Grid Layout, which controls columns and rows together.

Semantic HTML
  A semantic element clearly describes its meaning to both the browser and the developer.
  Examples of non-semantic elements: <div> and <span> - Tells nothing about its content.
  Examples of semantic elements: <form>, <table>, and <article> - Clearly defines its content.